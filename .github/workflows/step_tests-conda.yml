name: test-conda
run-name: Run tests using Conda

on:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-conda-test
  cancel-in-progress: true

jobs:
  test-conda:
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest' ]
        python-version: [ 3.11 ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache conda
        uses: actions/cache@v3
        with:
          path: ~/conda_pkgs_dir
          key: conda-${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('.ci/environment-ci.yml') }}

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: false
          activate-environment: jupytext-ci
          python-version: ${{ matrix.python-version }}
          channels: defaults,conda-forge
          environment-file: .ci/environment-ci.yml
          use-only-tar-bz2: true

      - name: Install from source
        run: python -m pip install -e '.[test-external,test-cov]'

      - name: Conda list
        run: conda list

      - name: Install a Jupyter Kernel
        run: python -m ipykernel install --name jupytext-ci --user

      - name: Test lab extension
        run: |
          # Check extension
          jupyter labextension list
          jupyter labextension list 2>&1 | grep -ie "jupyterlab-jupytext.*OK"
          python -m jupyterlab.browser_check

      - name: Test with pytest
        # We use an explicit coverage file otherwise the
        # codecov action below does not find it
        run: pytest --cov . --cov-report xml:coverage.xml

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          verbose: true
          files: coverage.xml
