name: CI (conda)
on:
  push:
    paths-ignore:
      - 'CHANGELOG.md'
  pull_request:

jobs:
  skip_duplicate:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}

  build:
    needs: skip_duplicate
    if: ${{ needs.skip_duplicate.outputs.should_skip == 'false' }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest' ]
        python-version: [ 2.7, 3.7 ]
        exclude:
          # This one fails, cf. https://github.com/mwouts/jupytext/runs/736344037
          - os: windows-latest
            python-version: 2.7
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache conda
        uses: actions/cache@v1
        with:
          path: ~/conda_pkgs_dir
          key: conda-${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('environment-ci.yml') }}
      - name: Setup Miniconda
        uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: true
          auto-activate-base: false
          activate-environment: jupytext-ci
          python-version: ${{ matrix.python-version }}
          channels: defaults,conda-forge
          environment-file: environment-ci.yml
          use-only-tar-bz2: true
      - name: Lint with flake8
        shell: pwsh
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # all Python files should follow PEP8 (except some notebooks, see setup.cfg)
          flake8 jupytext tests
          # exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --statistics
      - name: Install from source
        # This is required for the pre-commit tests
        shell: pwsh
        run: pip install .
      - name: Create kernel
        shell: pwsh
        run: |
          if("${{ matrix.python-version }}" -eq "2.7"){
            # Fix "ImportError: No module named functools_lru_cache" when running Jupyter commands
            # Cf. https://github.com/mwouts/jupytext/runs/793874319
            conda install backports.functools_lru_cache
          }
          python -m ipykernel install --name jupytext-ci --user
      - name: Install optional dependencies
        shell: pwsh
        run: |
          $ErrorActionPreference='silentlycontinue'
          # Install mock on Python 2.7
          conda install mock --freeze-installed
          # install black, isort if available (Python 3.6 and above), and autopep8 for testing the pipe mode
          conda install black --freeze-installed
          conda install isort>=5.3.0 --freeze-installed
          conda install autopep8 --freeze-installed
          # install sphinx_gallery and matplotlib if available
          conda install 'sphinx-gallery>=0.7' 'sphinx-gallery<0.8' --freeze-installed
          # myst-parser
          conda install 'markdown-it-py>=0.5' 'markdown-it-py<0.6' --freeze-installed
          exit 0
      - name: Conda list
        shell: pwsh
        run: conda list
      - name: Test with pytest
        shell: pwsh
        run: |
          if("${{ matrix.os }}" -eq "windows-latest"){
             pytest
          } else {
             pytest --cov=./ --cov-report=xml
          }
      - name: Upload coverage
        uses: codecov/codecov-action@v1
        if: ${{ matrix.os != 'windows-latest' }}
