name: CI (conda)
on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: [2.7, 3.7]
        exclude:
          # This one fails, cf. https://github.com/mwouts/jupytext/runs/736344037
          - os: windows-latest
            python-version: 2.7
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache conda
        uses: actions/cache@v1
        with:
          path: ~/conda_pkgs_dir
          key: conda-${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('environment-ci.yml') }}
      - name: Setup Miniconda
        uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: false
          auto-activate-base: false
          activate-environment: jupytext-ci
          python-version: ${{ matrix.python-version }}
          channels: defaults,conda-forge
          channel-priority: strict
          environment-file: environment-ci.yml
          use-only-tar-bz2: true
      - name: Lint with flake8
        shell: pwsh
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # all Python files should follow PEP8 (except some notebooks, see setup.cfg)
          flake8 jupytext tests
          # exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --statistics
      - name: Install from source
        shell: pwsh
        # This is required for the pre-commit tests
        run: |
          $ErrorActionPreference='silentlycontinue'
          pip install .
          exit 0
      - name: Install optional dependencies
        shell: pwsh
        run: |
          $ErrorActionPreference='silentlycontinue'
          # install black if available (Python 3.6 and above), and autopep8 for testing the pipe mode
          pip install black
          pip install autopep8
          # install sphinx_gallery and matplotlib if available (may not work on pypy)
          pip install sphinx_gallery
          pip install myst-parser
          exit 0
      - name: Test with pytest
        shell: pwsh
        run: pytest --cov=./ --cov-report=xml
      - name: Upload coverage
        uses: codecov/codecov-action@v1
