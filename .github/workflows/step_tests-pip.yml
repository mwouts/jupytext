name: test-pip
run-name: Run main tests using Pip

on:
  workflow_call:

permissions:
  contents: read

jobs:
  test-pip:
    name: >
      🐍 ${{ matrix.python-version }}
      ${{ matrix.dependency_type && format('({0})', matrix.dependency_type) }}
      ${{ matrix.markdown-it-py && format('(markdown-it-py {0})', matrix.markdown-it-py) }}
      ${{ matrix.quarto && '(Quarto)' }}
      ${{ matrix.no_kernel && '(No kernel)' }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12"]
        include:
          # Test pre-release versions
          - python-version: "3.x"
            dependency_type: "pre"
          # Test minimum markdown-it-py supported (otherwise the most recent version is used)
          - python-version: "3.x"
            markdown-it-py: "~=2.0"
          - python-version: "3.x"
            markdown-it-py: false
          - python-version: "3.x"
            no_kernel: true
          - python-version: "3.x"
            quarto: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Base Setup
        uses: jupyterlab/maintainer-tools/.github/actions/base-setup@v1
        with:
          python_version: ${{ matrix.python-version }}
          dependency_type: ${{ matrix.dependency_type }}

      - name: Install from source
        run: >
          python -m pip install
          -e '.[test-cov,test-external]'
          jupyterlab
          ${{ matrix.markdown-it-py && format('markdown-it-py{0}', matrix.markdown-it-py) || '' }}

      - name: Install a Jupyter Kernel
        if: ${{ !matrix.no_kernel }}
        run: python -m ipykernel install --name python_kernel --user
      - name: Uninstall markdown-it-py
        # Markdown-it-py is a dependency of Jupytext,
        # but Jupytext should still work if it is not installed
        if: ${{ matrix.markdown-it-py == 'false' }}
        run: python -m pip uninstall markdown-it-py --yes

      - name: Install Quarto
        if: ${{ matrix.quarto }}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          # download the latest release
          gh release download --repo quarto-dev/quarto-cli --pattern 'quarto-*-linux-amd64.deb'
          # install it
          sudo apt install ./*.deb

      - name: Test lab extension
        run: |
          # Check extension
          jupyter labextension list
          jupyter labextension list 2>&1 | grep -ie "jupyterlab-jupytext.*OK"
          python -m jupyterlab.browser_check

      - name: Test with pytest
        run: pytest -n logical --cov --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          verbose: true
